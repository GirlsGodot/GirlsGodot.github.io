name: Download and Extract Repos

on:
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:
  # schedule:
  #   - cron: '*/10 * * * *'

jobs:
  pull-repos:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Setup jq
      run: sudo apt-get install -y jq

    - name: Create base directory
      run: mkdir -p src/content

    - name: Read members.json and download repos
      run: |
        repos=$(cat members.json)
        for row in $(echo "${repos}" | jq -r '.[] | @base64'); do
          _jq() {
            echo ${row} | base64 --decode | jq -r ${1}
          }

          repo_url=$(_jq '.zip_url')
          name=$(_jq '.name')
          directory="src/content/$name"

          echo "Downloading $repo_url"
          curl -L $repo_url -o src/content/repo.zip

          echo "Removing old directory $name"
          rm -rf $directory

          echo "Creating directory $name"
          mkdir -p $directory

          echo "Unzipping repo.zip to $directory"
          unzip -o -q src/content/repo.zip -d $directory

          echo "Finding and moving contents to $directory"
          extracted_dir=$(find $directory -mindepth 1 -maxdepth 1 -type d)
          mv $extracted_dir/* $directory/

          echo "Cleaning up"
          rm src/content/repo.zip
          rm -rf $extracted_dir

        done

    - name: Commit and push changes
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'
        git add .
        git commit -m "Update downloaded repositories"
        git push
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
